---
- set_fact:
    lb_address: "{{ hostvars[groups['haproxy'][0]]['private_ip'] }}"

- name: Install RKE2 server
  shell: |
    curl -sfL https://get.rke2.io | INSTALL_RKE2_TYPE="server" sh -

- name: Ensure RKE2 directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /etc/rancher/rke2
    - /var/lib/rancher/rke2/server

- name: Write RKE2 config for all masters
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      {% if inventory_hostname == groups['master'][0] %}
      node-name: "{{ inventory_hostname }}"
      tls-san:
        - {{ lb_address }}
      write-kubeconfig-mode: "0644"
      {% else %}
      node-name: "{{ inventory_hostname }}"
      server: https://{{ lb_address }}:9345
      token-file: /var/lib/rancher/rke2/server/token
      tls-san:
        - {{ lb_address }}
      {% endif %}

# --- FIRST MASTER ---
- name: Enable and start RKE2 server on first master
  shell: |
    systemctl enable rke2-server.service
    systemctl start rke2-server.service
  when: inventory_hostname == groups['master'][0]

- name: Wait for RKE2 token on first master
  wait_for:
    path: /var/lib/rancher/rke2/server/token
    timeout: 180
  when: inventory_hostname == groups['master'][0]

- name: Fetch RKE2 token from first master
  fetch:
    src: /var/lib/rancher/rke2/server/token
    dest: /tmp/rke2_token
    flat: yes
  when: inventory_hostname == groups['master'][0]

# --- OTHER MASTERS ---
- name: Ensure RKE2 server directory exists on other masters
  file:
    path: /var/lib/rancher/rke2/server
    state: directory
    mode: '0755'
  when: inventory_hostname != groups['master'][0]

- name: Copy token to other masters
  copy:
    src: /tmp/rke2_token
    dest: /var/lib/rancher/rke2/server/token
    mode: '0600'
  when: inventory_hostname != groups['master'][0]

# --- CONFIG FILE ---
- name: Restart RKE2 service on first master
  shell: |
    systemctl restart rke2-server.service
  when: inventory_hostname == groups['master'][0]

# --- ENABLE ---
- name: Enable and start RKE2 service
  shell: |
    systemctl enable rke2-server.service
    systemctl start rke2-server.service

- name: Wait for RKE2 API to be ready
  shell: |
    /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes
  register: nodes_check
  retries: 30
  delay: 10
  until: nodes_check.rc == 0
  when: inventory_hostname == groups['master'][0]

